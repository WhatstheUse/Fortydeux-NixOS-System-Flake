name: "FlakeHub Build & Publish"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  publish-flake:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: Publish to FlakeHub
        uses: DeterminateSystems/flakehub-push@main
        with:
          name: fortydeux/Fortydeux-NixOS-System-Flake
          rolling: true
          visibility: public
          include-output-paths: true

  build-systems:
    runs-on: ubuntu-latest
    needs: publish-flake
    strategy:
      matrix:
        system: [archerfish-nixos, killifish-nixos, pufferfish-nixos, blackfin-nixos, blacktetra-nixos]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Nix
        uses: DeterminateSystems/determinate-nix-action@v3

      - name: Build NixOS System
        run: |
          # Skip Surface kernel builds due to runner space constraints
          if [[ "${{ matrix.system }}" == "archerfish-nixos" || "${{ matrix.system }}" == "killifish-nixos" ]]; then
            echo "Building system packages only (skipping kernel for space)..."
            nix build --no-link --print-build-logs ".#nixosConfigurations.${{ matrix.system }}.config.environment.systemPackages"
          else
            echo "Building complete system configuration..."
            nix build --no-link --print-build-logs ".#nixosConfigurations.${{ matrix.system }}.config.system.build.toplevel"
          fi

      - name: Report build status
        if: always()
        run: |
          echo "Build completed for ${{ matrix.system }}"
          echo "Complete system build (including kernel) cached in FlakeHub"
